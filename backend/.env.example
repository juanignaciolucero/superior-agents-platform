# Superior Agents Platform Backend - Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
PORT=3003
NODE_ENV=development

# =============================================================================
# LLM API KEYS (Choose at least one)
# =============================================================================

# Anthropic Claude API
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_claude_api_key_here

# OpenAI API
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Google Gemini API (Direct)
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# OpenRouter API (for multiple models including Gemini)
# Get your API key from: https://openrouter.ai/keys
OPENROUTER_API_KEY=your_openrouter_api_key_here

# DeepSeek API
# Get your API key from: https://platform.deepseek.com/
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# =============================================================================
# MCP-SPECIFIC API KEYS (Optional, for specific MCPs)
# =============================================================================

# CoinGecko API (for Price Feed MCP)
# Get your API key from: https://www.coingecko.com/en/api/pricing
COINGECKO_API_KEY=your_coingecko_api_key_here

# CryptoCompare API (alternative price data)
# Get your API key from: https://min-api.cryptocompare.com/
CRYPTOCOMPARE_API_KEY=your_cryptocompare_api_key_here

# News API (for News Aggregator MCP)
# Get your API key from: https://newsapi.org/
NEWS_API_KEY=your_news_api_key_here

# Twitter API (for Social Media MCP)
# Get your API keys from: https://developer.twitter.com/
TWITTER_API_KEY=your_twitter_api_key_here
TWITTER_API_SECRET=your_twitter_api_secret_here
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here

# =============================================================================
# BLOCKCHAIN RPC ENDPOINTS (For Wallet Tracker MCP)
# =============================================================================

# Ethereum RPC URL
# You can use Infura, Alchemy, or other providers
# Infura: https://infura.io/
# Alchemy: https://www.alchemy.com/
ETH_RPC_URL=https://mainnet.infura.io/v3/your_infura_project_id

# Polygon RPC URL (optional)
POLYGON_RPC_URL=https://polygon-mainnet.infura.io/v3/your_infura_project_id

# Solana RPC URL (optional)
# You can use the public endpoint or providers like QuickNode
SOL_RPC_URL=https://api.mainnet-beta.solana.com

# =============================================================================
# AUTHENTICATION & SECURITY (Future features)
# =============================================================================

# JWT Secret for authentication (generate a strong random string)
JWT_SECRET=your_super_secret_jwt_key_minimum_32_characters_long_please

# Session secret for express-session
SESSION_SECRET=another_strong_secret_for_sessions

# =============================================================================
# DATABASE CONFIGURATION (Future expansion)
# =============================================================================

# SQLite is used by default, but you can configure other databases
DATABASE_URL=sqlite:./agents.db

# PostgreSQL example (uncomment to use):
# DATABASE_URL=postgresql://username:password@localhost:5432/superior_agents

# MySQL example (uncomment to use):
# DATABASE_URL=mysql://username:password@localhost:3306/superior_agents

# =============================================================================
# DOCKER & DEPLOYMENT CONFIGURATION
# =============================================================================

# Container resource limits
MAX_CONTAINER_MEMORY=512MB
MAX_CONTAINER_CPU=0.5
CONTAINER_TIMEOUT=300

# Agent execution limits
MAX_RETRIES=3
MAX_EXECUTION_TIME=600

# =============================================================================
# LOGGING & MONITORING
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable/disable specific logging categories
LOG_AGENTS=true
LOG_DEPLOYMENTS=true
LOG_MCP_CONFIG=true

# =============================================================================
# FEATURE FLAGS (Enable/disable specific features)
# =============================================================================

# Enable AI-powered prompt enhancement
ENABLE_PROMPT_ENHANCEMENT=true

# Enable MCP recommendations based on agent purpose
ENABLE_MCP_RECOMMENDATIONS=true

# Enable persistent storage for agents
ENABLE_AGENT_PERSISTENCE=true

# Enable real-time log streaming
ENABLE_LOG_STREAMING=true

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode for development
DEBUG=false

# CORS origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Enable hot reload for runtime agent code
ENABLE_HOT_RELOAD=false

# Mock external API calls for testing
MOCK_EXTERNAL_APIS=false

# =============================================================================
# NOTES
# =============================================================================

# - Replace all "your_*_here" values with actual API keys and secrets
# - Keep this file secure and never commit it to version control
# - Use strong, unique secrets for JWT_SECRET and SESSION_SECRET
# - Some MCPs require specific API keys to function properly
# - You don't need all API keys - only for the MCPs you plan to use
# - For production, consider using environment variable injection
#   instead of .env files for enhanced security